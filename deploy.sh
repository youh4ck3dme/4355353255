#!/bin/bash

# --- Skript na Automatizovan√© Nasadenie Next.js Aplik√°cie na VPS ---

# Zastav√≠ skript pri akejkoƒævek chybe
set -e

# --- Konfigur√°cia (upravte iba pri prvom nasaden√≠) ---
APP_NAME="woopanel"                                           # N√°zov aplik√°cie pre PM2
GIT_REPO_URL="https://github.com/youh4ck3dme/woopaneldashboard.git"    # URL v√°≈°ho Git repozit√°ra (iba pre prv√© klonovanie)
PROJECT_DIR="/var/www/woopanel"                               # Cesta k adres√°ru projektu na serveri
NODE_VERSION="20"                                             # Verzia Node.js

# --- 1. Aktualiz√°cia servera a in≈°tal√°cia z√°vislost√≠ ---
echo "‚ñ∂Ô∏è  Aktualizujem server a in≈°talujem z√°kladn√© n√°stroje..."
sudo apt-get update
sudo apt-get install -y git curl unzip

# --- 2. In≈°tal√°cia NVM (Node Version Manager) a spr√°vnej verzie Node.js ---
if ! command -v nvm &> /dev/null
then
    echo "‚ñ∂Ô∏è  In≈°talujem NVM..."
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    source ~/.bashrc
else
    echo "‚úÖ NVM je u≈æ nain≈°talovan√©."
fi

# Naƒç√≠tanie NVM do aktu√°lnej session
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# In≈°tal√°cia a pou≈æitie spr√°vnej verzie Node.js
echo "‚ñ∂Ô∏è  In≈°talujem a pou≈æ√≠vam Node.js v$NODE_VERSION..."
nvm install $NODE_VERSION
nvm use $NODE_VERSION
nvm alias default $NODE_VERSION

# --- 3. In≈°tal√°cia PM2 (Process Manager) ---
if ! command -v pm2 &> /dev/null
then
    echo "‚ñ∂Ô∏è  In≈°talujem PM2 glob√°lne..."
    npm install pm2 -g
else
    echo "‚úÖ PM2 je u≈æ nain≈°talovan√©."
fi

# --- 4. Klonovanie alebo aktualiz√°cia repozit√°ra ---
if [ -d "$PROJECT_DIR/.git" ]; then
    echo "‚ñ∂Ô∏è  Adres√°r projektu existuje. S≈•ahujem najnov≈°ie zmeny z Git..."
    cd $PROJECT_DIR
    git pull
else
    echo "‚ñ∂Ô∏è  Adres√°r projektu neexistuje. Klonujem repozit√°r z $GIT_REPO_URL..."
    # Uisti sa, ≈æe nadraden√Ω adres√°r existuje
    sudo mkdir -p $(dirname $PROJECT_DIR)
    sudo chown $USER:$USER $(dirname $PROJECT_DIR)
    git clone $GIT_REPO_URL $PROJECT_DIR
    cd $PROJECT_DIR
fi

# --- 5. In≈°tal√°cia z√°vislost√≠ a build aplik√°cie ---
echo "‚ñ∂Ô∏è  In≈°talujem projektov√© z√°vislosti..."
npm install

echo "‚ñ∂Ô∏è  Vytv√°ram produkƒçn√Ω build..."
npm run build

# --- 6. Spr√°va premenn√Ωch prostredia ---
# Uistite sa, ≈æe s√∫bor .env.production existuje v adres√°ri projektu.
if [ ! -f ".env.production" ]; then
    echo "‚ö†Ô∏è  UPOZORNENIE: S√∫bor .env.production nebol n√°jden√Ω."
    echo "Vytv√°ram vzorov√Ω s√∫bor .env.production..."
    echo "GEMINI_API_KEY=VA≈†_API_KƒΩ√öƒå_SEM" > .env.production
    echo "üõë  AKCIA VY≈ΩADOVAN√Å: Upravte s√∫bor '$PROJECT_DIR/.env.production' a zadajte spr√°vny API kƒæ√∫ƒç."
    echo "Potom spustite skript znova."
    exit 1
fi

# --- 7. Spustenie alebo re≈°tartovanie aplik√°cie cez PM2 ---
echo "‚ñ∂Ô∏è  Sp√∫≈°≈•am alebo re≈°tartujem aplik√°ciu '$APP_NAME' cez PM2..."

# Skontroluje, ƒçi aplik√°cia u≈æ be≈æ√≠ v PM2
if pm2 describe $APP_NAME &> /dev/null; then
    echo "Aplik√°cia u≈æ be≈æ√≠, re≈°tartujem ju..."
    pm2 reload $APP_NAME --exp-backoff-restart-delay=100
else
    echo "Prv√© spustenie aplik√°cie..."
    pm2 start npm --name "$APP_NAME" -- start
fi

# Nastav√≠ automatick√© spustenie PM2 po re≈°tarte servera
pm2 startup | sudo bash -
pm2 save

echo "‚úÖ Aplik√°cia bola √∫spe≈°ne nasaden√° a be≈æ√≠ pod PM2!"
echo "URL aplik√°cie: http://<VA≈†A_IP_ADRESA>:3000 (ak nie je nakonfigurovan√Ω reverzn√Ω proxy)"
echo "Stav aplik√°cie m√¥≈æete skontrolova≈• pr√≠kazom: pm2 status"

exit 0
